{"version":3,"sources":["components/PageHeader/PageHeader.js","components/Filters/Filters.js","components/ItemList/ItemList.js","utils/API.js","views/CharactersPage/CharactersPage.js","views/LocationsPage/LocationsPage.js","views/EpisodesPage/EpisodesPage.js","views/NotFoundPage/NotFoundPage.js","components/EpisodeList/EpisodeList.js","components/CharacterList/CharacterList.js","components/DetailContent/DetailContent.js","components/DetailHeader/DetailHeader.js","views/DetailPage/DetailPage.js","components/Routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","className","to","src","alt","width","height","activeClassName","style","fontSize","Filters","filterTypes","filters","setFilters","handleChange","event","target","name","value","map","type","onChange","defaultValue","disabled","placeholder","toUpperCase","slice","autoComplete","getFilterOfType","ItemList","items","totalDataCount","fetchMoreData","path","exec","window","location","pathname","getSummaryInfos","item","filteredInfos","Object","entries","key","includes","filter","info","reverse","length","dataLength","next","hasMore","scrollableTarget","image","getFiltersQuery","keys","filterTexts","join","getData","endpointUrl","a","url","axios","get","response","message","data","count","results","getEndpoint","endpoint","filtersQuery","console","log","getItems","apiLinks","Promise","allSettled","link","replace","responses","Error","character","episode","CharactersPage","useState","characters","setCharacters","setTotalDataCount","species","gender","status","getFilteredCharacters","getAPI","filteredChars","useEffect","chars","oldCharacters","page","Math","floor","newCharacters","pageCaps","LocationsPage","locations","setLocations","dimension","getFilteredLocations","filteredLocs","eps","oldLocations","newLocations","EpisodesPage","episodes","setEpisodes","getFilteredEpisodes","filteredEps","oldEpisodes","newEpisodes","NotFoundPage","onClick","history","back","EpisodeList","arrayInfo","lastFiveEpisodeLinks","sort","b","lastFiveEpisode","CharacterList","characterLinks","listTitle","char","DetailContent","textInfos","infoType","infoValue","split","DetailHeader","DetailPage","useParams","setItem","fetchedItem","Routes","exact","from","render","props","component","App","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"ydA4EeA,MArEf,WACE,OACE,yBACEC,GAAG,SACHC,UAAU,uHAFZ,UAIE,cAAC,IAAD,CACEC,GAAG,IACH,cAAY,mBACZD,UAAU,wDAHZ,SAKE,qBACEA,UAAU,+BACVE,IAAI,mCACJC,IAAI,GACJC,MAAM,QACNC,OAAO,SAGX,qBAAKN,GAAG,aAAaC,UAAU,uCAA/B,SACE,qBAAIA,UAAU,uCAAd,UACE,6BACE,eAAC,IAAD,CACEC,GAAG,aACH,cAAY,yBACZK,gBAAgB,qBAChBN,UAAU,6EAJZ,UAME,sBAAMA,UAAU,6BAAhB,wBACA,cAAC,IAAD,CACEA,UAAU,oCACVO,MAAO,CAAEC,SAAU,iBAIzB,6BACE,eAAC,IAAD,CACEP,GAAG,YACH,cAAY,wBACZK,gBAAgB,qBAChBN,UAAU,6EAJZ,UAME,sBAAMA,UAAU,6BAAhB,uBACA,cAAC,IAAD,CACEA,UAAU,oCACVO,MAAO,CAAEC,SAAU,iBAIzB,6BACE,eAAC,IAAD,CACEP,GAAG,WACH,cAAY,uBACZK,gBAAgB,qBAChBN,UAAU,6EAJZ,UAME,sBAAMA,UAAU,6BAAhB,sBACA,cAAC,IAAD,CACEA,UAAU,oCACVO,MAAO,CAAEC,SAAU,0B,kECApBC,MAXf,YAAwD,IAArCC,EAAoC,EAApCA,YAAaC,EAAuB,EAAvBA,QAASC,EAAc,EAAdA,WACjCC,EAAe,SAACC,GAAW,IAAD,EAC9BF,EAAW,2BACND,GADK,kBAEPG,EAAMC,OAAOC,KAFN,UAEaF,EAAMC,cAFnB,aAEa,EAAcE,UAIvC,OAAO,mCAAGP,EAAYQ,KAAI,SAACC,GAAD,OA5DJ,SAACA,EAAMN,GAC7B,MAAa,WAATM,EAEA,yBACEH,KAAK,SACLhB,UAAU,wBACVoB,SAAUP,EAHZ,UAME,wBAAQI,MAAM,GAAGI,cAAY,EAACC,UAAQ,EAAtC,oBAGA,wBAAQL,MAAM,GAAd,iBACA,wBAAQA,MAAM,SAAd,oBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,aAAd,wBACA,wBAAQA,MAAM,UAAd,uBATKE,GAaE,WAATA,EAEA,yBACEH,KAAK,SACLhB,UAAU,wBACVoB,SAAUP,EAHZ,UAME,wBAAQI,MAAM,GAAGI,cAAY,EAACC,UAAQ,EAAtC,oBAGA,wBAAQL,MAAM,GAAd,iBACA,wBAAQA,MAAM,QAAd,mBACA,wBAAQA,MAAM,OAAd,kBACA,wBAAQA,MAAM,UAAd,uBARKE,GAcT,uBACEH,KAAMG,EACNA,KAAK,OACLnB,UAAU,wBACVuB,YAAaJ,EAAK,GAAGK,cAAgBL,EAAKM,MAAM,GAChDC,aAAa,MACbN,SAAUP,GACLM,GAa2BQ,CAAgBR,EAAMN,S,gBCuB7Ce,MAjFf,YAA6D,IAAzCC,EAAwC,EAAxCA,MAAOC,EAAiC,EAAjCA,eAAgBC,EAAiB,EAAjBA,cACnCC,EAAO,2BAA2BC,KAAKC,OAAOC,SAASC,UAAU,GAEvE,SAASC,EAAgBC,GACvB,IAAMC,EAAgBC,OAAOC,QAAQH,GAClCpB,KACC,mCAAEwB,EAAF,KAAOzB,EAAP,aACI,CAAC,OAAQ,QAAS,MAAO,UAAW,QAAQ0B,SAASD,IAC3C,aAATV,GAA+B,SAARU,IACT,kBAAVzB,GAAsB,CAACyB,EAAKzB,MAEtC2B,QAAO,SAACC,GAAD,MAAsB,KAAZA,EAAK,IAAyB,YAAZA,EAAK,MACxCD,QAAO,SAACC,GAAD,OAAUA,KAEpB,MAAgB,YAATb,EAAqBO,EAAcO,UAAYP,EAGxD,OACE,0BACExC,GAAG,YACHC,UAAU,mFAFZ,UAIE,sBAAKA,UAAU,sDAAf,UACE,qBAAIA,UAAU,QAAd,qBAA+BgC,EAA/B,OACA,oBAAGhC,UAAU,qBAAb,WACQ,OAAL6B,QAAK,IAALA,OAAA,EAAAA,EAAOkB,SAAU,EADpB,OAC2BjB,GAAkB,EAD7C,uBAKAD,EACA,qBACE9B,GAAG,gBACHC,UAAU,+DAFZ,SAIE,cAAC,IAAD,CACEgD,WAAYnB,EAAMkB,OAClB/C,UAAU,qEACViD,KAAMlB,EACNmB,SAAO,EACPC,iBAAiB,gBALnB,SAOGtB,EAAMX,KAAI,SAACoB,GAAD,OACT,cAAC,IAAD,CACErC,GAAE,UAAK+B,EAAL,YAAaM,EAAKvC,IACpBC,UAAU,YAFZ,SAKE,sBAEEA,UAAU,uDAFZ,UAIE,qBACEA,UAAU,UACVE,IAAKoC,EAAKc,OAAS,2BACnBjD,IAAI,KAEN,sBAAKH,UAAU,sBAAf,UACE,oBAAIA,UAAU,iFAAd,SACGsC,EAAKtB,OAER,oBAAIhB,UAAU,yDAAd,SACGqC,EAAgBC,GAAMpB,KAAI,SAAC2B,GAAD,OACzB,oBAEE7C,UAAU,yDAFZ,SAIG6C,EAAK,IAHDA,EAAK,cAfbP,EAAKvC,KAHPuC,EAAKvC,WAhBV,S,yBC9BHsD,EAAkB,SAAC1C,GAC9B,GAAI6B,OAAOc,KAAK3C,IAAY,EAC1B,MAAO,GAGT,GAAI,OAAQA,EACV,MAAM,IAAN,OAAWA,EAAQZ,IAGrB,IAAMwD,EAAcf,OAAOC,QAAQ9B,GAASO,KAC1C,mCAAEC,EAAF,KAAQF,EAAR,qBAAsBE,EAAtB,YAA8BF,MAGhC,MAAM,KAAN,OAAYsC,EAAYC,KAAK,OAGzBC,EAAO,uCAAG,WAAOC,GAAP,qBAAAC,EAAA,6DACRC,EADQ,UAlBA,oCAkBA,OACWF,GADX,kBAKKG,IAAMC,IAAIF,GALf,OAKZG,EALY,gFAOL,KAAIC,SAPC,aAoBV,YAFIC,EAASF,EAATE,OAlBM,0CAqBL,CACLnC,eAAc,UAAEmC,EAAKpB,YAAP,aAAE,EAAWqB,MAC3BD,KAAMA,EAAKE,UAvBD,iCA2BP,CAAEF,SA3BK,yDAAH,sDA8BAG,EAAW,uCAAG,8CAAAT,EAAA,6DAAOU,EAAP,+BAAkB,GAAI1D,EAAtB,+BAAgC,GACnD2D,EAAejB,EAAgB1C,GACrC4D,QAAQC,IAAI,iBAAkBF,GAFL,SAGNb,EAAQY,EAAWC,GAHb,cAGnBL,EAHmB,yBAKlBA,GALkB,2CAAH,qDAQXQ,EAAQ,uCAAG,WAAOC,GAAP,iBAAAf,EAAA,+EAEIgB,QAAQC,WAC9BF,EAASxD,KAAI,SAAC2D,GAAD,OACXpB,EAAQoB,EAAKC,QAAQ,mCAAoC,SAJzC,cAEdC,EAFc,OAQdd,EAAOc,EAAU7D,KAAI,SAAC6C,GAAD,OAAcA,EAAS9C,MAAMgD,QARpC,kBAUbA,GAVa,sCAYd,IAAIe,MAAM,KAAIhB,SAZA,yDAAH,sDA2BN,GACbiB,UAL0B,SAACtE,GAAD,OAAayD,EAAY,YAAazD,IAMhEwB,SALyB,SAACxB,GAAD,OAAayD,EAAY,WAAYzD,IAM9DuE,QALwB,SAACvE,GAAD,OAAayD,EAAY,UAAWzD,IAM5DkB,MAAO4C,GAGTA,EAAS,CACP,4CACA,4CACA,8CCJaU,MArFf,WACE,MAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAA4CF,mBAAS,GAArD,mBAAOtD,EAAP,KAAuByD,EAAvB,KACA,EAA8BH,mBAAS,CACrCpE,KAAM,GACNG,KAAM,GACNqE,QAAS,GACTC,OAAQ,GACRC,OAAQ,KALV,mBAAO/E,EAAP,KAAgBC,EAAhB,KAQM+E,EAAqB,uCAAG,4BAAAhC,EAAA,sEACAiC,EAAOX,UAAUtE,GADjB,cACtBkF,EADsB,OAG5BP,EAAcO,EAAc5B,MAC5BsB,EAAkBM,EAAc/D,gBAJJ,kBAMrB+D,GANqB,2CAAH,qDAS3BC,oBAAS,sBAAC,4BAAAnC,EAAA,sEACYiC,EAAOX,YADnB,OACFc,EADE,OAERT,EAAcS,EAAM9B,MACpBsB,EAAkBQ,EAAMjE,gBAHhB,2CAIP,IAEHgE,qBAAU,WACRR,EAAc,IACdK,MACC,CAAChF,IAEJ,IAAMoB,EAAa,uCAAG,8BAAA4B,EAAA,2DAChB0B,EAAWtC,OAASjB,GADJ,uBAEZkE,EAFY,YAEQX,GAFR,SAGUO,EAAOX,UAAP,2BACvBtE,GADuB,IAE1BsF,KAAMC,KAAKC,MAAMH,EAAcjD,OAAS,IAAM,KAL9B,OAQd,SALEqD,EAHY,SAShBd,EAAc,GAAD,mBAAKU,GAAL,YAAuBI,EAAcnC,QATlC,2CAAH,qDAcfoC,EAAW,KAcf,OAZ2B,KAAb,OAAVhB,QAAU,IAAVA,OAAA,EAAAA,EAAYtC,UAIZsD,EAHGvE,GAAqC,IAAnBA,EAEZA,EAAiB,IACf,kCACiB,MAAnBA,EACE,8BAEA,GANA,gCAWb,uBACE,cAAY,kBACZ9B,UAAU,oGAFZ,UAIE,wBACED,GAAG,iBACHC,UAAU,gDAFZ,UAIE,oBAAIA,UAAU,OAAd,oBACA,cAAC,EAAD,CACEU,YAAa,CAAC,OAAQ,OAAQ,UAAW,SAAU,UACnDC,QAASA,EACTC,WAAYA,IAEd,qBAAKV,IAAKmG,EAAUlG,IAAI,QAE1B,cAAC,EAAD,CACE0B,MAAOwD,EACPvD,eAAgBA,EAChBC,cAAeA,Q,MCWRuE,MA1Ff,WACE,MAAkClB,mBAAS,IAA3C,mBAAOmB,EAAP,KAAkBC,EAAlB,KACA,EAA4CpB,mBAAS,GAArD,mBAAOtD,EAAP,KAAuByD,EAAvB,KACA,EAA8BH,mBAAS,CACrCpE,KAAM,GACNG,KAAM,GACNsF,UAAW,KAHb,mBAAO9F,EAAP,KAAgBC,EAAhB,KAMM8F,EAAoB,uCAAG,4BAAA/C,EAAA,sEACAiC,EAAOzD,SAASxB,GADhB,cACrBgG,EADqB,OAG3BH,EAAaG,EAAa1C,MAC1BsB,EAAkBoB,EAAa7E,gBAJJ,kBAMpB6E,GANoB,2CAAH,qDAS1Bb,oBAAS,sBAAC,4BAAAnC,EAAA,sEACUiC,EAAOzD,WADjB,OACFyE,EADE,OAERJ,EAAaI,EAAI3C,MACjBsB,EAAkBqB,EAAI9E,gBAHd,2CAIP,IAEHgE,qBAAU,WACRU,EAAa,IACbE,MACC,CAAC/F,IAEJ,IAAMoB,EAAa,uCAAG,8BAAA4B,EAAA,2DAChB4C,EAAUxD,OAASjB,GADH,wBAEZ+E,EAFY,YAEON,GAFP,kBAMKX,EAAOzD,SAAP,2BAChBxB,GADgB,IAEnBsF,KAAMC,KAAKC,MAAMU,EAAa9D,OAAS,IAAM,KAR/B,OAMhB+D,EANgB,8DAWhBvC,QAAQC,IAAI,SAXI,2BAed,SAAUsC,GACZN,EAAa,GAAD,mBAAKK,GAAL,YAAsBC,EAAa7C,QAhB/B,yDAAH,qDAqBfoC,EAAW,KAcf,OAZ0B,KAAb,OAATE,QAAS,IAATA,OAAA,EAAAA,EAAWxD,UAIXsD,EAHGvE,GAAqC,IAAnBA,EAEZA,EAAiB,IACf,kCACiB,MAAnBA,EACE,8BAEA,GANA,gCAWb,uBACE,cAAY,iBACZ9B,UAAU,oGAFZ,UAIE,wBACED,GAAG,iBACHC,UAAU,gDAFZ,UAIE,oBAAIA,UAAU,OAAd,oBACA,cAAC,EAAD,CACEU,YAAa,CAAC,OAAQ,OAAQ,aAC9BC,QAASA,EACTC,WAAYA,IAEd,qBAAKV,IAAKmG,EAAUlG,IAAI,QAE1B,cAAC,EAAD,CACE0B,MAAO0E,EACPzE,eAAgBA,EAChBC,cAAeA,Q,MCGRgF,MAvFf,WACE,MAAgC3B,mBAAS,IAAzC,mBAAO4B,EAAP,KAAiBC,EAAjB,KACA,EAA4C7B,mBAAS,GAArD,mBAAOtD,EAAP,KAAuByD,EAAvB,KACA,EAA8BH,mBAAS,CACrCpE,KAAM,GACNkE,QAAS,KAFX,mBAAOvE,EAAP,KAAgBC,EAAhB,KAKMsG,EAAmB,uCAAG,4BAAAvD,EAAA,sEACAiC,EAAOV,QAAQvE,GADf,cACpBwG,EADoB,OAG1BF,EAAYE,EAAYlD,MACxBsB,EAAkB4B,EAAYrF,gBAJJ,kBAMnBqF,GANmB,2CAAH,qDASzBrB,oBAAS,sBAAC,4BAAAnC,EAAA,sEACUiC,EAAOV,UADjB,cACF0B,EADE,OAERK,EAAYL,EAAI3C,MAChBsB,EAAkBqB,EAAI9E,gBAHd,mBAKD,WACLmF,EAAY,IACZ1B,EAAkB,MAPZ,2CASP,IAEHO,qBAAU,WACRmB,EAAY,IACZC,MACC,CAACvG,IAEJ,IAAMoB,EAAa,uCAAG,8BAAA4B,EAAA,2DAChBqD,EAASjE,OAASjB,GADF,uBAEZsF,EAFY,YAEMJ,GAFN,SAGQpB,EAAOV,QAAP,2BACrBvE,GADqB,IAExBsF,KAAMC,KAAKC,MAAMiB,EAAYrE,OAAS,IAAM,KAL5B,OAQd,SALEsE,EAHY,SAShBJ,EAAY,GAAD,mBAAKG,GAAL,YAAqBC,EAAYpD,QAT5B,2CAAH,qDAcfoC,EAAW,KAcf,OAZyB,KAAb,OAARW,QAAQ,IAARA,OAAA,EAAAA,EAAUjE,UAIVsD,EAHGvE,GAAqC,IAAnBA,EAEZA,EAAiB,GACf,kCACiB,KAAnBA,EACE,8BAEA,GANA,gCAWb,uBACE,cAAY,gBACZ9B,UAAU,oGAFZ,UAIE,wBACED,GAAG,iBACHC,UAAU,gDAFZ,UAIE,oBAAIA,UAAU,OAAd,oBACA,cAAC,EAAD,CACEU,YAAa,CAAC,OAAQ,WACtBC,QAASA,EACTC,WAAYA,IAEd,qBAAKV,IAAKmG,EAAUlG,IAAI,QAE1B,cAAC,EAAD,CACE0B,MAAOmF,EACPlF,eAAgBA,EAChBC,cAAeA,Q,MC/DRuF,MArBf,WACE,OACE,sBAAMvH,GAAG,iBAAiBC,UAAU,mCAApC,SACE,sBAAKA,UAAU,6BAAf,UACE,oBAAIA,UAAU,QAAd,iBACA,oBAAGA,UAAU,uBAAb,yDAEE,uBACA,wBACEmB,KAAK,SACLoG,QAAS,kBAAMrF,OAAOsF,QAAQC,QAC9B,cAAY,sBAHd,oD,MC2BKC,MAlCf,YAAqC,IAAdC,EAAa,EAAbA,UACrB,EAAgCvC,mBAAS,IAAzC,mBAAO4B,EAAP,KAAiBC,EAAjB,KAYA,OAVAnB,oBAAS,sBAAC,8BAAAnC,EAAA,6DACFiE,EAAuBD,EAAU,GACpCE,MAAK,SAAClE,EAAGmE,GAAJ,OAAUnE,EAAImE,KACnBhF,UACArB,MAAM,EAAG,GAJJ,SAKsBmE,EAAO/D,MAAM+F,GALnC,OAKFG,EALE,OAORd,EAAYc,GAPJ,2CAQP,IAGD,sBAAKhI,GAAG,eAAeC,UAAU,cAAjC,UACE,oBAAIA,UAAU,mBAAd,2BACA,oBAAIA,UAAU,6DAAd,SACGgH,EAAS9F,KAAI,SAACgE,GAAD,OACZ,oBAAqBlF,UAAU,mBAA/B,SACE,cAAC,IAAD,CAAMC,GAAE,mBAAciF,EAAQnF,IAAMC,UAAU,eAA9C,SACE,uBAAMA,UAAU,WAAhB,UACE,uBAAMA,UAAU,4CAAhB,eACKkF,EAAQnF,MAEZmF,EAAQlE,WANNkE,EAAQnF,a,MCcZiI,MA/Bf,YAAuC,IAAdL,EAAa,EAAbA,UACvB,EAAoCvC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACAQ,oBAAS,sBAAC,8BAAAnC,EAAA,6DACFsE,EAAiBN,EAAU,GADzB,SAGsB/B,EAAO/D,MAAMoG,GAHnC,OAGFF,EAHE,OAKRzC,EAAcyC,GALN,2CAMP,IAEH,IAAMG,EAAYP,EAAU,GAAG,GAAGnG,cAAgBmG,EAAU,GAAGlG,MAAM,GAErE,OACE,sBAAK1B,GAAG,iBAAiBC,UAAU,QAAnC,UACE,oBAAIA,UAAU,mBAAd,SAAkCkI,IAClC,oBAAIlI,UAAU,0EAAd,SACGqF,EAAWnE,KAAI,SAACiH,GAAD,OACd,oBAEEnI,UAAU,6CAFZ,SAIE,cAAC,IAAD,CAAMC,GAAE,qBAAgBkI,EAAKpI,IAAMC,UAAU,iBAA7C,SACE,qBAAKE,IAAKiI,EAAK/E,MAAOjD,IAAI,GAAGH,UAAU,yBAJpCmI,EAAKpI,aCyBPqI,MA3Cf,YAAkC,IAAT9F,EAAQ,EAARA,KACjB+F,EAAY7F,OAAOC,QAAQH,GAC9BpB,KACC,mCAAEwB,EAAF,KAAOzB,EAAP,YACG,CAAC,OAAQ,QAAS,MAAO,WAAW0B,SAASD,IAC7B,kBAAVzB,GAAsB,CAACyB,EAAKzB,MAEtC2B,QAAO,SAACC,GAAD,QAAYA,KAEhB8E,EAAYnF,OAAOC,QAAQH,GAC9BM,QACC,mCAAEF,EAAF,KAAOzB,EAAP,WACE,CAAC,UAAW,YAAa,cAAc0B,SAASD,IAAQzB,KAE3D2B,QAAO,SAACC,GAAD,QAAYA,KACnBpB,OAAO,GAAG,GAEPO,EAAO,2BAA2BC,KAAKC,OAAOC,SAASC,UAAU,GAEvE,QACIuF,GACA,sBAAK5H,GAAG,iBAAiBC,UAAU,gBAAnC,UACE,oBAAID,GAAG,YAAYC,UAAU,2CAA7B,SACGqI,EAAUnH,KAAI,mCAAEoH,EAAF,KAAYC,EAAZ,YACb,qBAAIvI,UAAU,OAAd,UACE,+BAAKsI,EAASE,MAAM,KAApB,OACA,sBAAMxI,UAAU,qBAAhB,SACGuI,GAAa,cAHQD,QASpB,cAATtG,EACC,cAAC,EAAD,CAAa2F,UAAWA,IAExB,cAAC,EAAD,CAAeA,UAAWA,Q,MC7BrBc,MATf,YAAwC,IAAhBrF,EAAe,EAAfA,MAAOpC,EAAQ,EAARA,KAC7B,OACE,0BAASjB,GAAG,gBAAgBC,UAAU,yBAAtC,UACE,qBAAKE,IAAKkD,EAAOjD,IAAI,GAAGH,UAAU,SAClC,6BAAKgB,QCkCI0H,MAnCf,WACE,IAAQ3I,EAAO4I,cAAP5I,GACR,EAAwBqF,mBAAS,IAAjC,mBAAO9C,EAAP,KAAasG,EAAb,KAEM5G,EAAO,2BAA2BC,KAAKC,OAAOC,SAASC,UAAU,GAEvE0D,oBAAS,sBAAC,4BAAAnC,EAAA,sEACkBiC,EAAO5D,GAAM,CACrCjC,OAFM,OACF8I,EADE,OAIRD,EAAQC,EAAY5E,MAJZ,2CAKP,IAEH,IAAIb,EAAQ,GAYZ,OAViC,IAA7BZ,OAAOc,KAAKhB,GAAMS,SAElBK,EADEd,EAAKc,MACCd,EAAKc,MAEL,6BAIZmB,QAAQC,IAAI,UAAWpB,KAGnBd,GACA,uBAAMvC,GAAG,cAAcC,UAAU,qBAAjC,UACE,cAAC,EAAD,CAAcoD,MAAOA,EAAOpC,KAAMsB,EAAKtB,OACvC,cAAC,EAAD,CAAesB,KAAMA,QCSdwG,MAlCf,WACE,OACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAC/G,KAAK,IAAlB,SACE,cAAC,IAAD,CAAU+G,OAAK,EAACC,KAAK,IAAI/I,GAAG,iBAG9B,cAAC,IAAD,CACE8I,OAAK,EACL/G,KAAK,iBACLiH,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,eAAyCA,GAAxBA,EAAM/G,SAASO,QAErD,cAAC,IAAD,CAAOqG,OAAK,EAAC/G,KAAK,aAAamH,UAAWhE,IAE1C,cAAC,IAAD,CACE4D,OAAK,EACL/G,KAAK,gBACLiH,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,eAAyCA,GAAxBA,EAAM/G,SAASO,QAErD,cAAC,IAAD,CAAOqG,OAAK,EAAC/G,KAAK,YAAYmH,UAAW7C,IAEzC,cAAC,IAAD,CACEyC,OAAK,EACL/G,KAAK,eACLiH,OAAQ,SAACC,GAAD,OAAW,cAAC,EAAD,eAAyCA,GAAxBA,EAAM/G,SAASO,QAErD,cAAC,IAAD,CAAOqG,OAAK,EAAC/G,KAAK,WAAWmH,UAAWpC,IAExC,cAAC,IAAD,CAAOgC,OAAK,EAAC/G,KAAK,OAAOmH,UAAW7B,IACpC,cAAC,IAAD,CAAU0B,KAAK,IAAI/I,GAAG,a,MCvBbmJ,MATf,WACE,OACE,eAAC,IAAD,CAAQC,SAAUC,kBAAlB,UACE,cAAC,EAAD,IACA,cAAC,EAAD,QCCSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASf,OACP,cAAC,IAAMgB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.40acdbf1.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { BsPeopleFill, BsCameraVideoFill } from \"react-icons/bs\";\nimport { MdMyLocation } from \"react-icons/md\";\n\nimport \"./PageHeader.scss\";\n\nfunction Header() {\n  return (\n    <header\n      id=\"header\"\n      className=\"tablet:h-20 tablet:px-12 border-b-2 flex flex-col justify-center tablet:flex-row tablet:justify-between align-middle\"\n    >\n      <Link\n        to=\"/\"\n        data-testid=\"navigate-to-home\"\n        className=\"block w-full border-b-2 tablet:border-b-0 tablet:mx-0\"\n      >\n        <img\n          className=\"max-h-20 mx-auto tablet:mx-0\"\n          src=\"./assets/rick-and-morty-logo.png\"\n          alt=\"\"\n          width=\"350.7\"\n          height=\"78\"\n        />\n      </Link>\n      <nav id=\"header-nav\" className=\"justify-center items-center flex p-2\">\n        <ul className=\"flex items-center tablet:h-5 gap-x-2\">\n          <li>\n            <NavLink\n              to=\"/character\"\n              data-testid=\"navigate-to-characters\"\n              activeClassName=\"bg-custom-gradient\"\n              className=\"text-gray-500 px-3 py-2 rounded-md text-base font-medium flex items-center\"\n            >\n              <span className=\"tablet:hidden laptop:block\">Characters</span>\n              <BsPeopleFill\n                className=\"hidden tablet:block laptop:hidden\"\n                style={{ fontSize: \"1.4rem\" }}\n              />\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/location\"\n              data-testid=\"navigate-to-locations\"\n              activeClassName=\"bg-custom-gradient\"\n              className=\"text-gray-500 px-3 py-2 rounded-md text-base font-medium flex items-center\"\n            >\n              <span className=\"tablet:hidden laptop:block\">Locations</span>\n              <MdMyLocation\n                className=\"hidden tablet:block laptop:hidden\"\n                style={{ fontSize: \"1.3rem\" }}\n              />\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/episode\"\n              data-testid=\"navigate-to-episodes\"\n              activeClassName=\"bg-custom-gradient\"\n              className=\"text-gray-500 px-3 py-2 rounded-md text-base font-medium flex items-center\"\n            >\n              <span className=\"tablet:hidden laptop:block\">Episodes</span>\n              <BsCameraVideoFill\n                className=\"hidden tablet:block laptop:hidden\"\n                style={{ fontSize: \"1.3rem\" }}\n              />\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Filters.scss\";\n\nconst getFilterOfType = (type, handleChange) => {\n  if (type === \"gender\") {\n    return (\n      <select\n        name=\"gender\"\n        className=\"w-full mb-2 py-2 px-5\"\n        onChange={handleChange}\n        key={type}\n      >\n        <option value=\"\" defaultValue disabled>\n          Gender\n        </option>\n        <option value=\"\">All</option>\n        <option value=\"female\">Female</option>\n        <option value=\"male\">Male</option>\n        <option value=\"genderless\">Genderless</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n    );\n  }\n  if (type === \"status\") {\n    return (\n      <select\n        name=\"status\"\n        className=\"w-full mb-2 py-2 px-5\"\n        onChange={handleChange}\n        key={type}\n      >\n        <option value=\"\" defaultValue disabled>\n          Status\n        </option>\n        <option value=\"\">All</option>\n        <option value=\"alive\">Alive</option>\n        <option value=\"dead\">Dead</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n    );\n  }\n\n  return (\n    <input\n      name={type}\n      type=\"text\"\n      className=\"w-full mb-2 py-2 px-5\"\n      placeholder={type[0].toUpperCase() + type.slice(1)}\n      autoComplete=\"off\"\n      onChange={handleChange}\n      key={type}\n    />\n  );\n};\n\nfunction Filters({ filterTypes, filters, setFilters }) {\n  const handleChange = (event) => {\n    setFilters({\n      ...filters,\n      [event.target.name]: event.target?.value,\n    });\n  };\n\n  return <>{filterTypes.map((type) => getFilterOfType(type, handleChange))}</>;\n}\n\nexport default Filters;\n","import React from \"react\";\nimport \"./ItemList.scss\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Link } from \"react-router-dom\";\n\nfunction ItemList({ items, totalDataCount, fetchMoreData }) {\n  const path = /\\/[a-zA-Z-]+\\/(\\w+)\\/*.*/.exec(window.location.pathname)[1];\n\n  function getSummaryInfos(item) {\n    const filteredInfos = Object.entries(item)\n      .map(\n        ([key, value]) =>\n          (![\"name\", \"image\", \"url\", \"created\", \"type\"].includes(key) ||\n            (path === \"location\" && key === \"type\")) &&\n          typeof value === \"string\" && [key, value]\n      )\n      .filter((info) => info[1] !== \"\" && info[1] !== \"unknown\")\n      .filter((info) => info);\n\n    return path === \"episode\" ? filteredInfos.reverse() : filteredInfos;\n  }\n\n  return (\n    <section\n      id=\"item-list\"\n      className=\"h-full w-11/12  tablet:overflow-hidden tablet:flex-1 tablet:flex tablet:flex-col\"\n    >\n      <div className=\"laptop:flex laptop:justify-between laptop:items-end\">\n        <h2 className=\"text-\">List of {path}s</h2>\n        <p className=\"mb-5 text-gray-500\">\n          {items?.length || 0} of {totalDataCount || 0} items listed.\n        </p>\n      </div>\n\n      {!items ? null : (\n        <div\n          id=\"scrollableDiv\"\n          className=\"custom-scrollbar tablet:overflow-y-scroll tablet:pr-5 h-full\"\n        >\n          <InfiniteScroll\n            dataLength={items.length}\n            className=\"grid grid-cols-1 laptop:grid-cols-2 largeDesktop:grid-cols-3 gap-2\"\n            next={fetchMoreData}\n            hasMore\n            scrollableTarget=\"scrollableDiv\"\n          >\n            {items.map((item) => (\n              <Link\n                to={`${path}/${item.id}`}\n                className=\"card-link\"\n                key={item.id}\n              >\n                <div\n                  key={item.id}\n                  className=\"card-container flex items-end border border-gray-300\"\n                >\n                  <img\n                    className=\"card-bg\"\n                    src={item.image || \"./assets/placeholder.png\"}\n                    alt=\"\"\n                  />\n                  <div className=\"card-content w-full\">\n                    <h3 className=\"text-black font-black border-b-4 border-black p-2 text-center tablet:text-left\">\n                      {item.name}\n                    </h3>\n                    <ul className=\"flex flex-wrap p-2 justify-center tablet:justify-start\">\n                      {getSummaryInfos(item).map((info) => (\n                        <li\n                          key={info[0]}\n                          className=\"uppercase text-green-600 font-bold text-xl text-center\"\n                        >\n                          {info[1]}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </Link>\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default ItemList;\n","import axios from \"axios\";\n\nconst baseUrl = \"https://rickandmortyapi.com/api/\";\n\nexport const getFiltersQuery = (filters) => {\n  if (Object.keys(filters) <= 0) {\n    return \"\";\n  }\n\n  if (\"id\" in filters) {\n    return `/${filters.id}`;\n  }\n\n  const filterTexts = Object.entries(filters).map(\n    ([type, value]) => `${type}=${value}`\n  );\n\n  return `/?${filterTexts.join(\"&\")}`;\n};\n\nconst getData = async (endpointUrl) => {\n  const url = `${baseUrl}${endpointUrl}`;\n  let response;\n\n  try {\n    response = await axios.get(url);\n  } catch (err) {\n    return err.message;\n  }\n\n  /* \n    Raw data;\n    - /character -> data.results (array)\n    - /character/1 -> data (object)\n    - /character/1,2,3 -> data (array)\n    - /character/?name=\"Rick\" -> data.results (array)\n  */\n\n  const { data } = response;\n\n  if (\"results\" in data) {\n    return {\n      totalDataCount: data.info?.count,\n      data: data.results,\n    };\n  }\n\n  return { data };\n};\n\nexport const getEndpoint = async (endpoint = \"\", filters = {}) => {\n  const filtersQuery = getFiltersQuery(filters);\n  console.log(\"FILTERSQUERY: \", filtersQuery);\n  const fakeData = await getData(endpoint + filtersQuery);\n\n  return data;\n};\n\nexport const getItems = async (apiLinks) => {\n  try {\n    const responses = await Promise.allSettled(\n      apiLinks.map((link) =>\n        getData(link.replace(\"https://rickandmortyapi.com/api/\", \"\"))\n      )\n    );\n\n    const fakeData = responses.map((response) => response.value.data);\n\n    return data;\n  } catch (err) {\n    throw new Error(err.message);\n  }\n};\n\n/*\nAll filters: {\n  Characters: name, status, species, type, gender\n  Locations: name, type, dimension\n  Episodes: name, episode\n}\n*/\nexport const getCharacter = (filters) => getEndpoint(\"character\", filters);\nexport const getLocation = (filters) => getEndpoint(\"location\", filters);\nexport const getEpisode = (filters) => getEndpoint(\"episode\", filters);\n\nexport default {\n  character: getCharacter,\n  location: getLocation,\n  episode: getEpisode,\n  items: getItems,\n};\n\ngetItems([\n  \"https://rickandmortyapi.com/api/episode/1\",\n  \"https://rickandmortyapi.com/api/episode/2\",\n  \"https://rickandmortyapi.com/api/episode/3\",\n]);\n","import React, { useState, useEffect } from \"react\";\nimport Filters from \"../../components/Filters/Filters\";\nimport ItemList from \"../../components/ItemList/ItemList\";\nimport \"./CharactersPage.scss\";\nimport getAPI from \"../../utils/API\";\n\nfunction CharactersPage() {\n  const [characters, setCharacters] = useState([]);\n  const [totalDataCount, setTotalDataCount] = useState(0);\n  const [filters, setFilters] = useState({\n    name: \"\",\n    type: \"\",\n    species: \"\",\n    gender: \"\",\n    status: \"\",\n  });\n\n  const getFilteredCharacters = async () => {\n    const filteredChars = await getAPI.character(filters);\n\n    setCharacters(filteredChars.data);\n    setTotalDataCount(filteredChars.totalDataCount);\n\n    return filteredChars;\n  };\n\n  useEffect(async () => {\n    const chars = await getAPI.character();\n    setCharacters(chars.data);\n    setTotalDataCount(chars.totalDataCount);\n  }, []);\n\n  useEffect(() => {\n    setCharacters([]); // eğer filtre varsa array'i sıfırla ki var olanın sonuna eklemesin\n    getFilteredCharacters();\n  }, [filters]);\n\n  const fetchMoreData = async () => {\n    if (characters.length < totalDataCount) {\n      const oldCharacters = [...characters];\n      const newCharacters = await getAPI.character({\n        ...filters,\n        page: Math.floor(oldCharacters.length / 20) + 1,\n      });\n\n      if (\"data\" in newCharacters) {\n        setCharacters([...oldCharacters, ...newCharacters.data]);\n      }\n    }\n  };\n\n  let pageCaps = null;\n\n  if (characters?.length !== 0) {\n    if (!totalDataCount || totalDataCount === 0) {\n      pageCaps = \"./assets/empty-list-caps.png\";\n    } else if (totalDataCount < 671) {\n      pageCaps = \"./assets/filtered-list-caps.png\";\n    } else if (totalDataCount === 671) {\n      pageCaps = \"./assets/full-list-caps.png\";\n    } else {\n      pageCaps = \"\";\n    }\n  }\n\n  return (\n    <main\n      data-testid=\"characters-main\"\n      className=\"bg-gray-100 flex flex-col items-center tablet:items-start tablet:flex-row p-6 tablet:px-20 gap-16\"\n    >\n      <aside\n        id=\"filtersSection\"\n        className=\"w-11/12 tablet:flex-none tablet:w-3/12 h-full\"\n      >\n        <h2 className=\"mb-3\">Filter</h2>\n        <Filters\n          filterTypes={[\"name\", \"type\", \"species\", \"gender\", \"status\"]}\n          filters={filters}\n          setFilters={setFilters}\n        />\n        <img src={pageCaps} alt=\"\" />\n      </aside>\n      <ItemList\n        items={characters}\n        totalDataCount={totalDataCount}\n        fetchMoreData={fetchMoreData}\n      />\n    </main>\n  );\n}\n\nexport default CharactersPage;\n","import React, { useState, useEffect } from \"react\";\nimport Filters from \"../../components/Filters/Filters\";\nimport ItemList from \"../../components/ItemList/ItemList\";\nimport \"./LocationsPage.scss\";\nimport getAPI from \"../../utils/API\";\n\nfunction LocationsPage() {\n  const [locations, setLocations] = useState([]);\n  const [totalDataCount, setTotalDataCount] = useState(0);\n  const [filters, setFilters] = useState({\n    name: \"\",\n    type: \"\",\n    dimension: \"\",\n  });\n\n  const getFilteredLocations = async () => {\n    const filteredLocs = await getAPI.location(filters);\n\n    setLocations(filteredLocs.data);\n    setTotalDataCount(filteredLocs.totalDataCount);\n\n    return filteredLocs;\n  };\n\n  useEffect(async () => {\n    const eps = await getAPI.location();\n    setLocations(eps.data);\n    setTotalDataCount(eps.totalDataCount);\n  }, []);\n\n  useEffect(() => {\n    setLocations([]); // eğer filtre varsa array'i sıfırla ki var olanın sonuna eklemesin\n    getFilteredLocations();\n  }, [filters]);\n\n  const fetchMoreData = async () => {\n    if (locations.length < totalDataCount) {\n      const oldLocations = [...locations];\n\n      let newLocations;\n      try {\n        newLocations = await getAPI.location({\n          ...filters,\n          page: Math.floor(oldLocations.length / 20) + 1,\n        });\n      } catch (err) {\n        console.log(\"error\");\n        return;\n      }\n\n      if (\"data\" in newLocations) {\n        setLocations([...oldLocations, ...newLocations.data]);\n      }\n    }\n  };\n\n  let pageCaps = null;\n\n  if (locations?.length !== 0) {\n    if (!totalDataCount || totalDataCount === 0) {\n      pageCaps = \"./assets/empty-list-caps.png\";\n    } else if (totalDataCount < 108) {\n      pageCaps = \"./assets/filtered-list-caps.png\";\n    } else if (totalDataCount === 108) {\n      pageCaps = \"./assets/full-list-caps.png\";\n    } else {\n      pageCaps = \"\";\n    }\n  }\n\n  return (\n    <main\n      data-testid=\"locations-main\"\n      className=\"bg-gray-100 flex flex-col items-center tablet:items-start tablet:flex-row p-6 tablet:px-20 gap-16\"\n    >\n      <aside\n        id=\"filtersSection\"\n        className=\"w-11/12 tablet:flex-none tablet:w-3/12 h-full\"\n      >\n        <h2 className=\"mb-3\">Filter</h2>\n        <Filters\n          filterTypes={[\"name\", \"type\", \"dimension\"]}\n          filters={filters}\n          setFilters={setFilters}\n        />\n        <img src={pageCaps} alt=\"\" />\n      </aside>\n      <ItemList\n        items={locations}\n        totalDataCount={totalDataCount}\n        fetchMoreData={fetchMoreData}\n      />\n    </main>\n  );\n}\n\nexport default LocationsPage;\n","import React, { useState, useEffect } from \"react\";\nimport Filters from \"../../components/Filters/Filters\";\nimport ItemList from \"../../components/ItemList/ItemList\";\nimport \"./EpisodesPage.scss\";\nimport getAPI from \"../../utils/API\";\n\nfunction EpisodesPage() {\n  const [episodes, setEpisodes] = useState([]);\n  const [totalDataCount, setTotalDataCount] = useState(0);\n  const [filters, setFilters] = useState({\n    name: \"\",\n    episode: \"\",\n  });\n\n  const getFilteredEpisodes = async () => {\n    const filteredEps = await getAPI.episode(filters);\n\n    setEpisodes(filteredEps.data);\n    setTotalDataCount(filteredEps.totalDataCount);\n\n    return filteredEps;\n  };\n\n  useEffect(async () => {\n    const eps = await getAPI.episode();\n    setEpisodes(eps.data);\n    setTotalDataCount(eps.totalDataCount);\n\n    return () => {\n      setEpisodes([]);\n      setTotalDataCount(0);\n    };\n  }, []);\n\n  useEffect(() => {\n    setEpisodes([]); // eğer filtre varsa array'i sıfırla ki var olanın sonuna eklemesin\n    getFilteredEpisodes();\n  }, [filters]);\n\n  const fetchMoreData = async () => {\n    if (episodes.length < totalDataCount) {\n      const oldEpisodes = [...episodes];\n      const newEpisodes = await getAPI.episode({\n        ...filters,\n        page: Math.floor(oldEpisodes.length / 20) + 1,\n      });\n\n      if (\"data\" in newEpisodes) {\n        setEpisodes([...oldEpisodes, ...newEpisodes.data]);\n      }\n    }\n  };\n\n  let pageCaps = null;\n\n  if (episodes?.length !== 0) {\n    if (!totalDataCount || totalDataCount === 0) {\n      pageCaps = \"./assets/empty-list-caps.png\";\n    } else if (totalDataCount < 41) {\n      pageCaps = \"./assets/filtered-list-caps.png\";\n    } else if (totalDataCount === 41) {\n      pageCaps = \"./assets/full-list-caps.png\";\n    } else {\n      pageCaps = \"\";\n    }\n  }\n\n  return (\n    <main\n      data-testid=\"episodes-main\"\n      className=\"bg-gray-100 flex flex-col items-center tablet:items-start tablet:flex-row p-6 tablet:px-20 gap-16\"\n    >\n      <aside\n        id=\"filtersSection\"\n        className=\"w-11/12 tablet:flex-none tablet:w-3/12 h-full\"\n      >\n        <h2 className=\"mb-3\">Filter</h2>\n        <Filters\n          filterTypes={[\"name\", \"episode\"]}\n          filters={filters}\n          setFilters={setFilters}\n        />\n        <img src={pageCaps} alt=\"\" />\n      </aside>\n      <ItemList\n        items={episodes}\n        totalDataCount={totalDataCount}\n        fetchMoreData={fetchMoreData}\n      />\n    </main>\n  );\n}\n\nexport default EpisodesPage;\n","import React from \"react\";\nimport \"./NotFoundPage.scss\";\n\nfunction NotFoundPage() {\n  return (\n    <main id=\"not-found-main\" className=\"flex justify-center items-center\">\n      <div className=\"flex flex-col items-center\">\n        <h2 className=\"mb-10\">404</h2>\n        <p className=\"text-center text-2xl\">\n          You are lost in the world of Rick and Morty!\n          <br />\n          <button\n            type=\"button\"\n            onClick={() => window.history.back()}\n            data-testid=\"return-previos-page\"\n          >\n            Return to the familiar place.\n          </button>\n        </p>\n      </div>\n    </main>\n  );\n}\n\nexport default NotFoundPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport getAPI from \"../../utils/API\";\n\nfunction EpisodeList({ arrayInfo }) {\n  const [episodes, setEpisodes] = useState([]);\n\n  useEffect(async () => {\n    const lastFiveEpisodeLinks = arrayInfo[1]\n      .sort((a, b) => a - b)\n      .reverse()\n      .slice(0, 5);\n    const lastFiveEpisode = await getAPI.items(lastFiveEpisodeLinks);\n\n    setEpisodes(lastFiveEpisode);\n  }, []);\n\n  return (\n    <div id=\"episode-list\" className=\"px-5 w-full\">\n      <h2 className=\"mt-5 text-center\">Last Episodes</h2>\n      <ul className=\"uppercase items-center w-full py-4 flex flex-col flex-wrap\">\n        {episodes.map((episode) => (\n          <li key={episode.id} className=\"flex text-center\">\n            <Link to={`/episode/${episode.id}`} className=\"episode-link\">\n              <span className=\"text-2xl\">\n                <span className=\"text-2xl font-bold text-gray-500 m-0 mr-2\">\n                  ep{episode.id}\n                </span>\n                {episode.name}\n              </span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default EpisodeList;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport getAPI from \"../../utils/API\";\nimport \"./CharacterList.scss\";\n\nfunction CharacterList({ arrayInfo }) {\n  const [characters, setCharacters] = useState([]);\n  useEffect(async () => {\n    const characterLinks = arrayInfo[1];\n\n    const lastFiveEpisode = await getAPI.items(characterLinks);\n\n    setCharacters(lastFiveEpisode);\n  }, []);\n\n  const listTitle = arrayInfo[0][0].toUpperCase() + arrayInfo[0].slice(1);\n\n  return (\n    <div id=\"character-list\" className=\"px-10\">\n      <h2 className=\"mt-5 text-center\">{listTitle}</h2>\n      <ul className=\"uppercase items-center justify-center w-full py-4 flex flex-wrap flex-1\">\n        {characters.map((char) => (\n          <li\n            key={char.id}\n            className=\"flex flex-col items-center text-center p-1\"\n          >\n            <Link to={`/character/${char.id}`} className=\"character-link\">\n              <img src={char.image} alt=\"\" className=\"rounded-full w-16\" />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default CharacterList;\n","import React from \"react\";\nimport \"./DetailContent.scss\";\nimport EpisodeList from \"../EpisodeList/EpisodeList\";\nimport CharacterList from \"../CharacterList/CharacterList\";\n\nfunction DetailContent({ item }) {\n  const textInfos = Object.entries(item)\n    .map(\n      ([key, value]) =>\n        ![\"name\", \"image\", \"url\", \"created\"].includes(key) &&\n        typeof value === \"string\" && [key, value]\n    )\n    .filter((info) => !!info);\n\n  const arrayInfo = Object.entries(item)\n    .filter(\n      ([key, value]) =>\n        [\"episode\", \"residents\", \"characters\"].includes(key) && value\n    )\n    .filter((info) => !!info)\n    .slice(-1)[0]; // son öğeyi al\n\n  const path = /\\/[a-zA-Z-]+\\/(\\w+)\\/*.*/.exec(window.location.pathname)[1];\n\n  return (\n    !!arrayInfo && (\n      <div id=\"detail-content\" className=\"flex flex-col\">\n        <ul id=\"info-list\" className=\"capitalize flex flex-col border-b-2 py-4\">\n          {textInfos.map(([infoType, infoValue]) => (\n            <li className=\"flex\" key={infoType}>\n              <h4>{infoType.split(\"_\")}:</h4>\n              <span className=\"text-2xl font-bold\">\n                {infoValue || \"Unknown\"}\n              </span>\n            </li>\n          ))}\n        </ul>\n\n        {path === \"character\" ? (\n          <EpisodeList arrayInfo={arrayInfo} />\n        ) : (\n          <CharacterList arrayInfo={arrayInfo} />\n        )}\n      </div>\n    )\n  );\n}\n\nexport default DetailContent;\n","import React from \"react\";\nimport \"./DetailHeader.scss\";\n\nfunction DetailHeader({ image, name }) {\n  return (\n    <section id=\"detail-header\" className=\"border-b-2 pb-10 px-20\">\n      <img src={image} alt=\"\" className=\"mb-5\" />\n      <h2>{name}</h2>\n    </section>\n  );\n}\n\nexport default DetailHeader;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport DetailContent from \"../../components/DetailContent/DetailContent\";\nimport DetailHeader from \"../../components/DetailHeader/DetailHeader\";\nimport getAPI from \"../../utils/API\";\n\nfunction DetailPage() {\n  const { id } = useParams();\n  const [item, setItem] = useState({});\n\n  const path = /\\/[a-zA-Z-]+\\/(\\w+)\\/*.*/.exec(window.location.pathname)[1];\n\n  useEffect(async () => {\n    const fetchedItem = await getAPI[path]({\n      id,\n    });\n    setItem(fetchedItem.data);\n  }, []);\n\n  let image = \"\";\n\n  if (Object.keys(item).length !== 0) {\n    if (item.image) {\n      image = item.image;\n    } else {\n      image = \"../assets/placeholder.png\";\n    }\n  }\n\n  console.log(\"IMAGE: \", image);\n\n  return (\n    !!item && (\n      <main id=\"detail-main\" className=\"py-10 desktop:py-0\">\n        <DetailHeader image={image} name={item.name} />\n        <DetailContent item={item} />\n      </main>\n    )\n  );\n}\n\nexport default DetailPage;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport CharactersPage from \"../../views/CharactersPage/CharactersPage\";\nimport LocationsPage from \"../../views/LocationsPage/LocationsPage\";\nimport EpisodesPage from \"../../views/EpisodesPage/EpisodesPage\";\nimport NotFoundPage from \"../../views/NotFoundPage/NotFoundPage\";\nimport DetailPage from \"../../views/DetailPage/DetailPage\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect exact from=\"/\" to=\"/character\" />\n      </Route>\n\n      <Route\n        exact\n        path=\"/character/:id\"\n        render={(props) => <DetailPage key={props.location.key} {...props} />}\n      />\n      <Route exact path=\"/character\" component={CharactersPage} />\n\n      <Route\n        exact\n        path=\"/location/:id\"\n        render={(props) => <DetailPage key={props.location.key} {...props} />}\n      />\n      <Route exact path=\"/location\" component={LocationsPage} />\n\n      <Route\n        exact\n        path=\"/episode/:id\"\n        render={(props) => <DetailPage key={props.location.key} {...props} />}\n      />\n      <Route exact path=\"/episode\" component={EpisodesPage} />\n\n      <Route exact path=\"/404\" component={NotFoundPage} />\n      <Redirect from=\"*\" to=\"/404\" />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport PageHeader from \"./components/PageHeader/PageHeader\";\nimport Routes from \"./components/Routes/Routes\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <PageHeader />\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}