{"version":3,"sources":["components/PageHeader/PageHeader.js","components/Filters/Filters.js","components/ItemList/ItemList.js","utils/API.js","views/CharactersPage/CharactersPage.js","views/LocationsPage/LocationsPage.js","views/EpisodesPage/EpisodesPage.js","views/NotFoundPage/NotFoundPage.js","components/EpisodeList/EpisodeList.js","components/CharacterList/CharacterList.js","components/DetailContent/DetailContent.js","components/DetailHeader/DetailHeader.js","views/DetailPage/DetailPage.js","components/Routes/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["Header","id","className","to","src","alt","height","activeClassName","style","fontSize","Filters","filterTypes","filters","setFilters","handleChange","event","target","name","value","map","type","onChange","defaultValue","disabled","placeholder","toUpperCase","slice","autoComplete","getFilterOfType","ItemList","items","totalDataCount","fetchMoreData","pathName","window","location","pathname","replace","getSummaryInfos","item","filteredInfos","Object","entries","key","includes","filter","info","reverse","length","dataLength","next","hasMore","scrollableTarget","image","getFiltersQuery","keys","filterTexts","join","getData","endpointUrl","a","url","axios","get","response","data","Array","isArray","count","results","getEndpoint","endpoint","filtersQuery","rawData","status","error","message","getAPI","character","episode","apiLinks","Promise","allSettled","link","responses","CharactersPage","useState","characters","setCharacters","setTotalDataCount","species","gender","getFilteredCharacters","filteredChars","useEffect","chars","oldCharacters","page","Math","floor","newCharacters","pageCaps","LocationsPage","locations","setLocations","dimension","getFilteredLocations","filteredLocs","eps","oldLocations","newLocations","EpisodesPage","episodes","setEpisodes","getFilteredEpisodes","filteredEps","oldEpisodes","newEpisodes","NotFoundPage","onClick","history","back","EpisodeList","arrayInfo","lastFiveEpisodeLinks","sort","b","lastFiveEpisode","CharacterList","characterLinks","listTitle","char","DetailContent","textInfos","infoType","infoValue","split","DetailHeader","DetailPage","useParams","setItem","path","fetchedItem","Routes","exact","from","render","props","component","App","basename","process","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d84b440.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link, NavLink } from \"react-router-dom\";\nimport { BsPeopleFill, BsCameraVideoFill } from \"react-icons/bs\";\nimport { MdMyLocation } from \"react-icons/md\";\n\nimport \"./PageHeader.scss\";\n\nfunction Header() {\n  return (\n    <header\n      id=\"header\"\n      className=\"tablet:h-20 tablet:px-12 border-b-2 flex flex-col justify-center tablet:flex-row tablet:justify-between align-middle\"\n    >\n      <Link\n        to=\"/\"\n        data-testid=\"navigate-to-home\"\n        className=\"block w-full border-b-2 tablet:border-b-0 tablet:mx-0\"\n      >\n        <img\n          className=\"max-h-20 mx-auto tablet:mx-0\"\n          src=\"./assets/rick-and-morty-logo.png\"\n          alt=\"\"\n          height=\"78\"\n        />\n      </Link>\n      <nav id=\"header-nav\" className=\"justify-center items-center flex p-2\">\n        <ul className=\"flex items-center tablet:h-5 gap-x-2\">\n          <li>\n            <NavLink\n              to=\"/character\"\n              data-testid=\"navigate-to-characters\"\n              activeClassName=\"bg-custom-gradient\"\n              className=\"text-gray-500 px-3 py-2 rounded-md text-base font-medium flex items-center\"\n            >\n              <span className=\"tablet:hidden laptop:block\">Characters</span>\n              <BsPeopleFill\n                className=\"hidden tablet:block laptop:hidden\"\n                style={{ fontSize: \"1.4rem\" }}\n              />\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/location\"\n              data-testid=\"navigate-to-locations\"\n              activeClassName=\"bg-custom-gradient\"\n              className=\"text-gray-500 px-3 py-2 rounded-md text-base font-medium flex items-center\"\n            >\n              <span className=\"tablet:hidden laptop:block\">Locations</span>\n              <MdMyLocation\n                className=\"hidden tablet:block laptop:hidden\"\n                style={{ fontSize: \"1.3rem\" }}\n              />\n            </NavLink>\n          </li>\n          <li>\n            <NavLink\n              to=\"/episode\"\n              data-testid=\"navigate-to-episodes\"\n              activeClassName=\"bg-custom-gradient\"\n              className=\"text-gray-500 px-3 py-2 rounded-md text-base font-medium flex items-center\"\n            >\n              <span className=\"tablet:hidden laptop:block\">Episodes</span>\n              <BsCameraVideoFill\n                className=\"hidden tablet:block laptop:hidden\"\n                style={{ fontSize: \"1.3rem\" }}\n              />\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\nimport \"./Filters.scss\";\n\nconst getFilterOfType = (type, handleChange) => {\n  if (type === \"gender\") {\n    return (\n      <select\n        name=\"gender\"\n        className=\"w-full mb-2 py-2 px-5\"\n        onChange={handleChange}\n        key={type}\n      >\n        <option value=\"\" defaultValue disabled>\n          Gender\n        </option>\n        <option value=\"\">All</option>\n        <option value=\"female\">Female</option>\n        <option value=\"male\">Male</option>\n        <option value=\"genderless\">Genderless</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n    );\n  }\n  if (type === \"status\") {\n    return (\n      <select\n        name=\"status\"\n        className=\"w-full mb-2 py-2 px-5\"\n        onChange={handleChange}\n        key={type}\n      >\n        <option value=\"\" defaultValue disabled>\n          Status\n        </option>\n        <option value=\"\">All</option>\n        <option value=\"alive\">Alive</option>\n        <option value=\"dead\">Dead</option>\n        <option value=\"unknown\">Unknown</option>\n      </select>\n    );\n  }\n\n  return (\n    <input\n      name={type}\n      type=\"text\"\n      className=\"w-full mb-2 py-2 px-5\"\n      placeholder={type[0].toUpperCase() + type.slice(1)}\n      autoComplete=\"off\"\n      onChange={handleChange}\n      key={type}\n    />\n  );\n};\n\nfunction Filters({ filterTypes, filters, setFilters }) {\n  const handleChange = (event) => {\n    setFilters({\n      ...filters,\n      [event.target.name]: event.target?.value,\n    });\n  };\n\n  return <>{filterTypes.map((type) => getFilterOfType(type, handleChange))}</>;\n}\n\nexport default Filters;\n","import React from \"react\";\nimport \"./ItemList.scss\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport { Link } from \"react-router-dom\";\n\nfunction ItemList({ items, totalDataCount, fetchMoreData }) {\n  const pathName = window.location.pathname.replace(/\\/([a-zA-Z-]+)\\//, \"\");\n\n  function getSummaryInfos(item) {\n    const filteredInfos = Object.entries(item)\n      .map(\n        ([key, value]) =>\n          (![\"name\", \"image\", \"url\", \"created\", \"type\"].includes(key) ||\n            (pathName === \"/location\" && key === \"type\")) &&\n          typeof value === \"string\" && [key, value]\n      )\n      .filter((info) => info[1] !== \"\" && info[1] !== \"unknown\")\n      .filter((info) => info);\n\n    return pathName === \"/episode\" ? filteredInfos.reverse() : filteredInfos;\n  }\n\n  return (\n    <section\n      id=\"item-list\"\n      className=\"h-full w-11/12  tablet:overflow-hidden tablet:flex-1 tablet:flex tablet:flex-col\"\n    >\n      <div className=\"laptop:flex laptop:justify-between laptop:items-end\">\n        <h2 className=\"text-\">List of {pathName.slice(1)}s</h2>\n        <p className=\"mb-5 text-gray-500\">\n          {items?.length || 0} of {totalDataCount || 0} items listed.\n        </p>\n      </div>\n\n      {!items ? null : (\n        <div\n          id=\"scrollableDiv\"\n          className=\"custom-scrollbar tablet:overflow-y-scroll tablet:pr-5 h-full\"\n        >\n          <InfiniteScroll\n            dataLength={items.length}\n            className=\"grid grid-cols-1 laptop:grid-cols-2 largeDesktop:grid-cols-3 gap-2\"\n            next={fetchMoreData}\n            hasMore\n            scrollableTarget=\"scrollableDiv\"\n          >\n            {items.map((item) => (\n              <Link\n                to={`${pathName}/${item.id}`}\n                className=\"card-link\"\n                key={item.id}\n              >\n                <div\n                  key={item.id}\n                  className=\"card-container flex items-end border border-gray-300\"\n                >\n                  <img\n                    className=\"card-bg\"\n                    src={item.image || \"./assets/placeholder.png\"}\n                    alt=\"\"\n                  />\n                  <div className=\"card-content w-full\">\n                    <h3 className=\"text-black font-black border-b-4 border-black p-2 text-center tablet:text-left\">\n                      {item.name}\n                    </h3>\n                    <ul className=\"flex flex-wrap p-2 justify-center tablet:justify-start\">\n                      {getSummaryInfos(item).map((info) => (\n                        <li\n                          key={info[0]}\n                          className=\"uppercase text-green-600 font-bold text-xl text-center\"\n                        >\n                          {info[1]}\n                        </li>\n                      ))}\n                    </ul>\n                  </div>\n                </div>\n              </Link>\n            ))}\n          </InfiniteScroll>\n        </div>\n      )}\n    </section>\n  );\n}\n\nexport default ItemList;\n","import axios from \"axios\";\n\nconst baseUrl = \"https://rickandmortyapi.com/api/\";\n\nconst getFiltersQuery = (filters) => {\n  if (Object.keys(filters) <= 0) {\n    return \"\";\n  }\n\n  if (\"id\" in filters) {\n    return `/${filters.id}`;\n  }\n\n  const filterTexts = Object.entries(filters).map(\n    ([type, value]) => `${type}=${value}`\n  );\n\n  return `/?${filterTexts.join(\"&\")}`;\n};\n\nconst getData = async (endpointUrl) => {\n  const url = `${baseUrl}${endpointUrl}`;\n  const response = await axios.get(url);\n\n  const { info, data } = response;\n  /* \n    Raw data;\n    - /character -> data.results (array)\n    - /character/1 -> data (object)\n    - /character/1,2,3 -> data (array)\n    - /character/?name=\"Rick\" -> data.results (array)\n  */\n\n  if (Array.isArray(data) || data?.id) {\n    return { data, totalDataCount: info?.count };\n  }\n\n  return {\n    data: data.results,\n    totalDataCount: data.info?.count,\n  };\n};\n\nexport const getEndpoint = async (endpoint = \"\", filters = {}) => {\n  try {\n    const filtersQuery = getFiltersQuery(filters);\n    const rawData = await getData(endpoint + filtersQuery);\n\n    return rawData;\n  } catch (e) {\n    return {\n      status: e.status,\n      error: e.message,\n    };\n  }\n};\n\nexport const getItems = async (apiLinks) => {\n  try {\n    const responses = await Promise.allSettled(\n      apiLinks.map((link) => axios(link))\n    );\n\n    const rawData = responses.map((response) => response.value.data);\n\n    return rawData;\n  } catch (e) {\n    return {\n      status: e.status,\n      error: e.message,\n    };\n  }\n};\n\n/*\nAll filters: {\n  Characters: name, status, species, type, gender\n  Locations: name, type, dimension\n  Episodes: name, episode\n}\n*/\nexport const getCharacter = (filters) => getEndpoint(\"character\", filters);\nexport const getLocation = (filters) => getEndpoint(\"location\", filters);\nexport const getEpisode = (filters) => getEndpoint(\"episode\", filters);\n\nexport const getAPI = {\n  character: getCharacter,\n  location: getLocation,\n  episode: getEpisode,\n  items: getItems,\n};\n","import React, { useState, useEffect } from \"react\";\nimport Filters from \"../../components/Filters/Filters\";\nimport ItemList from \"../../components/ItemList/ItemList\";\nimport \"./CharactersPage.scss\";\nimport { getAPI } from \"../../utils/API\";\n\nfunction CharactersPage() {\n  const [characters, setCharacters] = useState([]);\n  const [totalDataCount, setTotalDataCount] = useState(0);\n  const [filters, setFilters] = useState({\n    name: \"\",\n    type: \"\",\n    species: \"\",\n    gender: \"\",\n    status: \"\",\n  });\n\n  const getFilteredCharacters = async () => {\n    const filteredChars = await getAPI.character(filters);\n\n    setCharacters(filteredChars.data);\n    setTotalDataCount(filteredChars.totalDataCount);\n\n    return filteredChars;\n  };\n\n  useEffect(async () => {\n    const chars = await getAPI.character();\n    setCharacters(chars.data);\n    setTotalDataCount(chars.totalDataCount);\n  }, []);\n\n  useEffect(() => {\n    setCharacters([]); // eğer filtre varsa array'i sıfırla ki var olanın sonuna eklemesin\n    getFilteredCharacters();\n  }, [filters]);\n\n  const fetchMoreData = async () => {\n    if (characters.length < totalDataCount) {\n      const oldCharacters = [...characters];\n      const newCharacters = await getAPI.character({\n        ...filters,\n        page: Math.floor(oldCharacters.length / 20) + 1,\n      });\n\n      if (\"data\" in newCharacters) {\n        setCharacters([...oldCharacters, ...newCharacters.data]);\n      }\n    }\n  };\n\n  let pageCaps = null;\n\n  if (characters?.length !== 0) {\n    if (!totalDataCount || totalDataCount === 0) {\n      pageCaps = \"./assets/empty-list-caps.png\";\n    } else if (totalDataCount < 671) {\n      pageCaps = \"./assets/filtered-list-caps.png\";\n    } else if (totalDataCount === 671) {\n      pageCaps = \"./assets/full-list-caps.png\";\n    } else {\n      pageCaps = \"\";\n    }\n  }\n\n  return (\n    <main\n      data-testid=\"characters-main\"\n      className=\"bg-gray-100 flex flex-col items-center tablet:items-start tablet:flex-row p-6 tablet:px-20 gap-16\"\n    >\n      <aside\n        id=\"filtersSection\"\n        className=\"w-11/12 tablet:flex-none tablet:w-3/12 h-full\"\n      >\n        <h2 className=\"mb-3\">Filter</h2>\n        <Filters\n          filterTypes={[\"name\", \"type\", \"species\", \"gender\", \"status\"]}\n          filters={filters}\n          setFilters={setFilters}\n        />\n        <img src={pageCaps} alt=\"\" />\n      </aside>\n      <ItemList\n        items={characters}\n        totalDataCount={totalDataCount}\n        fetchMoreData={fetchMoreData}\n      />\n    </main>\n  );\n}\n\nexport default CharactersPage;\n","import React, { useState, useEffect } from \"react\";\nimport Filters from \"../../components/Filters/Filters\";\nimport ItemList from \"../../components/ItemList/ItemList\";\nimport \"./LocationsPage.scss\";\nimport { getAPI } from \"../../utils/API\";\n\nfunction LocationsPage() {\n  const [locations, setLocations] = useState([]);\n  const [totalDataCount, setTotalDataCount] = useState(0);\n  const [filters, setFilters] = useState({\n    name: \"\",\n    type: \"\",\n    dimension: \"\",\n  });\n\n  const getFilteredLocations = async () => {\n    const filteredLocs = await getAPI.location(filters);\n\n    setLocations(filteredLocs.data);\n    setTotalDataCount(filteredLocs.totalDataCount);\n\n    return filteredLocs;\n  };\n\n  useEffect(async () => {\n    const eps = await getAPI.location();\n    setLocations(eps.data);\n    setTotalDataCount(eps.totalDataCount);\n  }, []);\n\n  useEffect(() => {\n    setLocations([]); // eğer filtre varsa array'i sıfırla ki var olanın sonuna eklemesin\n    getFilteredLocations();\n  }, [filters]);\n\n  const fetchMoreData = async () => {\n    if (locations.length < totalDataCount) {\n      const oldLocations = [...locations];\n      const newLocations = await getAPI.location({\n        ...filters,\n        page: Math.floor(oldLocations.length / 20) + 1,\n      });\n\n      if (\"data\" in newLocations) {\n        setLocations([...oldLocations, ...newLocations.data]);\n      }\n    }\n  };\n\n  let pageCaps = null;\n\n  if (locations?.length !== 0) {\n    if (!totalDataCount || totalDataCount === 0) {\n      pageCaps = \"./assets/empty-list-caps.png\";\n    } else if (totalDataCount < 108) {\n      pageCaps = \"./assets/filtered-list-caps.png\";\n    } else if (totalDataCount === 108) {\n      pageCaps = \"./assets/full-list-caps.png\";\n    } else {\n      pageCaps = \"\";\n    }\n  }\n\n  return (\n    <main\n      data-testid=\"locations-main\"\n      className=\"bg-gray-100 flex flex-col items-center tablet:items-start tablet:flex-row p-6 tablet:px-20 gap-16\"\n    >\n      <aside\n        id=\"filtersSection\"\n        className=\"w-11/12 tablet:flex-none tablet:w-3/12 h-full\"\n      >\n        <h2 className=\"mb-3\">Filter</h2>\n        <Filters\n          filterTypes={[\"name\", \"type\", \"dimension\"]}\n          filters={filters}\n          setFilters={setFilters}\n        />\n        <img src={pageCaps} alt=\"\" />\n      </aside>\n      <ItemList\n        items={locations}\n        totalDataCount={totalDataCount}\n        fetchMoreData={fetchMoreData}\n      />\n    </main>\n  );\n}\n\nexport default LocationsPage;\n","import React, { useState, useEffect } from \"react\";\nimport Filters from \"../../components/Filters/Filters\";\nimport ItemList from \"../../components/ItemList/ItemList\";\nimport \"./EpisodesPage.scss\";\nimport { getAPI } from \"../../utils/API\";\n\nfunction EpisodesPage() {\n  const [episodes, setEpisodes] = useState([]);\n  const [totalDataCount, setTotalDataCount] = useState(0);\n  const [filters, setFilters] = useState({\n    name: \"\",\n    episode: \"\",\n  });\n\n  const getFilteredEpisodes = async () => {\n    const filteredEps = await getAPI.episode(filters);\n\n    setEpisodes(filteredEps.data);\n    setTotalDataCount(filteredEps.totalDataCount);\n\n    return filteredEps;\n  };\n\n  useEffect(async () => {\n    const eps = await getAPI.episode();\n    setEpisodes(eps.data);\n    setTotalDataCount(eps.totalDataCount);\n\n    return () => {\n      setEpisodes([]);\n      setTotalDataCount(0);\n    };\n  }, []);\n\n  useEffect(() => {\n    setEpisodes([]); // eğer filtre varsa array'i sıfırla ki var olanın sonuna eklemesin\n    getFilteredEpisodes();\n  }, [filters]);\n\n  const fetchMoreData = async () => {\n    if (episodes.length < totalDataCount) {\n      const oldEpisodes = [...episodes];\n      const newEpisodes = await getAPI.episode({\n        ...filters,\n        page: Math.floor(oldEpisodes.length / 20) + 1,\n      });\n\n      if (\"data\" in newEpisodes) {\n        setEpisodes([...oldEpisodes, ...newEpisodes.data]);\n      }\n    }\n  };\n\n  let pageCaps = null;\n\n  if (episodes?.length !== 0) {\n    if (!totalDataCount || totalDataCount === 0) {\n      pageCaps = \"./assets/empty-list-caps.png\";\n    } else if (totalDataCount < 41) {\n      pageCaps = \"./assets/filtered-list-caps.png\";\n    } else if (totalDataCount === 41) {\n      pageCaps = \"./assets/full-list-caps.png\";\n    } else {\n      pageCaps = \"\";\n    }\n  }\n\n  return (\n    <main\n      data-testid=\"episodes-main\"\n      className=\"bg-gray-100 flex flex-col items-center tablet:items-start tablet:flex-row p-6 tablet:px-20 gap-16\"\n    >\n      <aside\n        id=\"filtersSection\"\n        className=\"w-11/12 tablet:flex-none tablet:w-3/12 h-full\"\n      >\n        <h2 className=\"mb-3\">Filter</h2>\n        <Filters\n          filterTypes={[\"name\", \"episode\"]}\n          filters={filters}\n          setFilters={setFilters}\n        />\n        <img src={pageCaps} alt=\"\" />\n      </aside>\n      <ItemList\n        items={episodes}\n        totalDataCount={totalDataCount}\n        fetchMoreData={fetchMoreData}\n      />\n    </main>\n  );\n}\n\nexport default EpisodesPage;\n","import React from \"react\";\nimport \"./NotFoundPage.scss\";\n\nfunction NotFoundPage() {\n  return (\n    <main id=\"not-found-main\" className=\"flex justify-center items-center\">\n      <div className=\"flex flex-col items-center\">\n        <h2 className=\"mb-10\">404</h2>\n        <p className=\"text-center text-2xl\">\n          You are lost in the world of Rick and Morty!\n          <br />\n          <button\n            type=\"button\"\n            onClick={() => window.history.back()}\n            data-testid=\"return-previos-page\"\n          >\n            Return to the familiar place.\n          </button>\n        </p>\n      </div>\n    </main>\n  );\n}\n\nexport default NotFoundPage;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAPI } from \"../../utils/API\";\n\nfunction EpisodeList({ arrayInfo }) {\n  const [episodes, setEpisodes] = useState([]);\n  useEffect(async () => {\n    const lastFiveEpisodeLinks = arrayInfo[1]\n      .sort((a, b) => a - b)\n      .reverse()\n      .slice(0, 5);\n\n    const lastFiveEpisode = await getAPI.items(lastFiveEpisodeLinks);\n\n    setEpisodes(lastFiveEpisode);\n  }, []);\n\n  return (\n    <div id=\"episode-list\" className=\"px-5 w-full\">\n      <h2 className=\"mt-5 text-center\">Last Episodes</h2>\n      <ul className=\"uppercase items-center w-full py-4 flex flex-col flex-wrap\">\n        {episodes.map((episode) => (\n          <li key={episode.id} className=\"flex text-center\">\n            <Link to={`/episode/${episode.id}`} className=\"episode-link\">\n              <span className=\"text-2xl\">\n                <span className=\"text-2xl font-bold text-gray-500 m-0 mr-2\">\n                  ep{episode.id}\n                </span>\n                {episode.name}\n              </span>\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default EpisodeList;\n","import React, { useState, useEffect } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { getAPI } from \"../../utils/API\";\nimport \"./CharacterList.scss\";\n\nfunction CharacterList({ arrayInfo }) {\n  const [characters, setCharacters] = useState([]);\n  useEffect(async () => {\n    const characterLinks = arrayInfo[1];\n\n    const lastFiveEpisode = await getAPI.items(characterLinks);\n\n    setCharacters(lastFiveEpisode);\n  }, []);\n\n  const listTitle = arrayInfo[0][0].toUpperCase() + arrayInfo[0].slice(1);\n\n  return (\n    <div id=\"character-list\" className=\"px-20\">\n      <h2 className=\"mt-5 text-center\">{listTitle}</h2>\n      <ul className=\"uppercase items-center justify-center w-full py-4 flex flex-wrap flex-1\">\n        {characters.map((char) => (\n          <li\n            key={char.id}\n            className=\"flex flex-col items-center text-center p-1\"\n          >\n            <Link to={`/character/${char.id}`} className=\"character-link\">\n              <img src={char.image} alt=\"\" className=\"rounded-full w-16\" />\n            </Link>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default CharacterList;\n","import React from \"react\";\nimport \"./DetailContent.scss\";\nimport EpisodeList from \"../EpisodeList/EpisodeList\";\nimport CharacterList from \"../CharacterList/CharacterList\";\n\nfunction DetailContent({ item }) {\n  const textInfos = Object.entries(item)\n    .map(\n      ([key, value]) =>\n        ![\"name\", \"image\", \"url\", \"created\"].includes(key) &&\n        typeof value === \"string\" && [key, value]\n    )\n    .filter((info) => !!info);\n\n  const arrayInfo = Object.entries(item)\n    .filter(\n      ([key, value]) =>\n        [\"episode\", \"residents\", \"characters\"].includes(key) && value\n    )\n    .filter((info) => !!info)\n    .slice(-1)[0]; // son öğeyi al\n\n  const pathName = window.location.pathname.replace(/\\/(\\w+)\\/\\w+/, \"$1\");\n\n  return (\n    !!arrayInfo && (\n      <div id=\"detail-content\" className=\"desktop:h-1/2 flex flex-col\">\n        <ul\n          id=\"info-list\"\n          className=\"capitalize flex flex-col border-b-2 py-4 w-3/12\"\n        >\n          {textInfos.map(([infoType, infoValue]) => (\n            <li className=\"flex\" key={infoType}>\n              <h4>{infoType.split(\"_\")}:</h4>\n              <span className=\"text-2xl font-bold\">\n                {infoValue || \"Unknown\"}\n              </span>\n            </li>\n          ))}\n        </ul>\n\n        {pathName === \"character\" ? (\n          <EpisodeList arrayInfo={arrayInfo} />\n        ) : (\n          <CharacterList arrayInfo={arrayInfo} />\n        )}\n      </div>\n    )\n  );\n}\n\nexport default DetailContent;\n","import React from \"react\";\nimport \"./DetailHeader.scss\";\n\nfunction DetailHeader({ image, name }) {\n  return (\n    <section id=\"detail-header\" className=\"border-b-2 pb-10 px-20\">\n      <img src={image} alt=\"Item\" className=\"mb-5\" />\n      <h2>{name}</h2>\n    </section>\n  );\n}\n\nexport default DetailHeader;\n","import React, { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router\";\nimport DetailContent from \"../../components/DetailContent/DetailContent\";\nimport DetailHeader from \"../../components/DetailHeader/DetailHeader\";\nimport { getAPI } from \"../../utils/API\";\n\nfunction DetailPage() {\n  const { id } = useParams();\n  const [item, setItem] = useState({});\n\n  const path = window.location.pathname.replace(/\\/(\\w+)\\/\\w+/, \"$1\");\n\n  useEffect(async () => {\n    const fetchedItem = await getAPI[path]({ id });\n    setItem(fetchedItem.data);\n  }, []);\n\n  return (\n    !!item && (\n      <main id=\"detail-main\" className=\"py-10\">\n        <DetailHeader\n          image={item?.image || \"./assets/placeholder.png\"}\n          name={item.name}\n        />\n        <DetailContent item={item} />\n      </main>\n    )\n  );\n}\n\nexport default DetailPage;\n","/* eslint-disable react/jsx-props-no-spreading */\n\nimport React from \"react\";\nimport { Route, Redirect, Switch } from \"react-router-dom\";\nimport CharactersPage from \"../../views/CharactersPage/CharactersPage\";\nimport LocationsPage from \"../../views/LocationsPage/LocationsPage\";\nimport EpisodesPage from \"../../views/EpisodesPage/EpisodesPage\";\nimport NotFoundPage from \"../../views/NotFoundPage/NotFoundPage\";\nimport DetailPage from \"../../views/DetailPage/DetailPage\";\n\nfunction Routes() {\n  return (\n    <Switch>\n      <Route exact path=\"/\">\n        <Redirect exact from=\"/\" to=\"/character\" />\n      </Route>\n\n      <Route\n        exact\n        path=\"/character/:id\"\n        render={(props) => <DetailPage key={props.location.key} {...props} />}\n      />\n      <Route exact path=\"/character\" component={CharactersPage} />\n\n      <Route\n        exact\n        path=\"/location/:id\"\n        render={(props) => <DetailPage key={props.location.key} {...props} />}\n      />\n      <Route exact path=\"/location\" component={LocationsPage} />\n\n      <Route\n        exact\n        path=\"/episode/:id\"\n        render={(props) => <DetailPage key={props.location.key} {...props} />}\n      />\n      <Route exact path=\"/episode\" component={EpisodesPage} />\n\n      <Route exact path=\"/404\" component={NotFoundPage} />\n      <Redirect from=\"*\" to=\"/404\" />\n    </Switch>\n  );\n}\n\nexport default Routes;\n","import React from \"react\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport PageHeader from \"./components/PageHeader/PageHeader\";\nimport Routes from \"./components/Routes/Routes\";\n\nimport \"./App.scss\";\n\nfunction App() {\n  return (\n    <Router basename={process.env.PUBLIC_URL}>\n      <PageHeader />\n      <Routes />\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}